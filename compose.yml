volumes:
  db:
  composer:
  opensearch:

services:
  db:
    env_file:
      - .env
    image: mysql:${MYSQL_VERSION}
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db:/var/lib/mysql:Z
      - ./data/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
  
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
  
  php-cli:
    build:
      context: ./docker
      dockerfile: php-cli.Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION}
    environment:
      PHP_VERSION: ${PHP_VERSION}
      COMPOSER_AUTH: |
        {
          "http-basic": {
            "repo.magento.com": {
              "username": "${MAGENTO_KEY_PUB}",
              "password": "${MAGENTO_KEY_PRV}"
            }
          }
        }
      PHP_MEMORY_LIMIT: 4G
    working_dir: ${PHP_WORKDIR}
    volumes:
      - ./src:${PHP_WORKDIR}
      #- composer:/home/www-data/.composer #TODO volume per pacchetti composer
    command: -i

  php-fpm:
    build:
      context: ./docker
      dockerfile: php-fpm.Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION}
    volumes:
      - ./src:/var/www/html

  opensearch:
    image: opensearchproject/opensearch
    ports:
      - "9200:9200"
      - "9600:9600"
    environment:
      discovery.type: single-node
      bootstrap.memory_lock: true
      plugins.security.disabled: true
      ES_JAVA_OPTS: -Xms1g -Xmx1g
      OPENSEARCH_JAVA_OPTS: -Xms512m -Xmx512m
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: ${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
    #volumes:
      #- opensearch:/usr/share/opensearch/data

  web:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./src:/var/www/html
      - ./default.conf:/etc/nginx/conf.d/default.conf